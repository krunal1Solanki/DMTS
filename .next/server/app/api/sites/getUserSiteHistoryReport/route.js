"use strict";(()=>{var e={};e.id=4747,e.ids=[4747],e.modules={11185:e=>{e.exports=require("mongoose")},524:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},22037:e=>{e.exports=require("os")},4210:(e,t,o)=>{o.r(t),o.d(t,{headerHooks:()=>g,originalPathname:()=>x,requestAsyncStorage:()=>u,routeModule:()=>p,serverHooks:()=>d,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>m});var r={};o.r(r),o.d(r,{GET:()=>GET});var s=o(10884),n=o(16132),i=o(61610),a=o(95798),c=o(51834);async function GET(e){try{let e=await c.Z.find().sort({creationDate:-1});return a.Z.json({message:e})}catch(e){return a.Z.json({error:e.message})}}(0,i.$)();let p=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/sites/getUserSiteHistoryReport/route",pathname:"/api/sites/getUserSiteHistoryReport",filename:"route",bundlePath:"app/api/sites/getUserSiteHistoryReport/route"},resolvedPagePath:"/Users/delta/DMTS/src/app/api/sites/getUserSiteHistoryReport/route.tsx",nextConfigOutput:"",userland:r}),{requestAsyncStorage:u,staticGenerationAsyncStorage:l,serverHooks:d,headerHooks:g,staticGenerationBailout:m}=p,x="/api/sites/getUserSiteHistoryReport/route"},61610:(e,t,o)=>{o.d(t,{$:()=>connect});var r=o(11185),s=o.n(r);async function connect(){try{s().connect(process.env.DB);let e=s().connection;e.on("connected",()=>{console.log("MongoDb Connected Successfully")}),e.on("error",e=>{console.log("Connection Error",e.message),process.exit()})}catch(e){console.log("Something went wrong",e.message)}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),o=t.X(0,[6126,8107,1834],()=>__webpack_exec__(4210));module.exports=o})();