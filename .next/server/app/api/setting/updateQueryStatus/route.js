"use strict";(()=>{var e={};e.id=3796,e.ids=[3796],e.modules={11185:e=>{e.exports=require("mongoose")},524:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},57370:(e,t,a)=>{a.r(t),a.d(t,{headerHooks:()=>g,originalPathname:()=>m,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>c,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>S});var r={};a.r(r),a.d(r,{POST:()=>POST});var s=a(10884),u=a(16132),o=a(61610),n=a(18661),i=a(95798);async function POST(e){try{let t=await e.json();console.log(t);let{queryStatus:a,_id:r}=t,s=await n.Z.findOneAndUpdate({_id:r},{$set:{queryStatus:a}});return console.log(s),i.Z.json({message:"Query Raised Successfully"})}catch(e){return i.Z.json({error:e.message})}}(0,o.$)();let p=new s.AppRouteRouteModule({definition:{kind:u.x.APP_ROUTE,page:"/api/setting/updateQueryStatus/route",pathname:"/api/setting/updateQueryStatus",filename:"route",bundlePath:"app/api/setting/updateQueryStatus/route"},resolvedPagePath:"/Users/delta/DMTS/src/app/api/setting/updateQueryStatus/route.tsx",nextConfigOutput:"",userland:r}),{requestAsyncStorage:d,staticGenerationAsyncStorage:l,serverHooks:c,headerHooks:g,staticGenerationBailout:S}=p,m="/api/setting/updateQueryStatus/route"}};var t=require("../../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[6126,8107,9061],()=>__webpack_exec__(57370));module.exports=a})();