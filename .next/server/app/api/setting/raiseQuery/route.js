"use strict";(()=>{var e={};e.id=647,e.ids=[647],e.modules={11185:e=>{e.exports=require("mongoose")},524:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},69064:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>g,originalPathname:()=>y,requestAsyncStorage:()=>c,routeModule:()=>p,serverHooks:()=>l,staticGenerationAsyncStorage:()=>d,staticGenerationBailout:()=>m});var a={};t.r(a),t.d(a,{POST:()=>POST});var s=t(10884),i=t(16132),o=t(61610),n=t(18661),u=t(95798);async function POST(e){try{let r=await e.json(),{queryType:t,queryDescription:a}=r;return await n.Z.create({queryDescription:a,queryType:t}),console.log(r),u.Z.json({message:"Query Raised Successfully"})}catch(e){return u.Z.json({error:e.message})}}(0,o.$)();let p=new s.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/setting/raiseQuery/route",pathname:"/api/setting/raiseQuery",filename:"route",bundlePath:"app/api/setting/raiseQuery/route"},resolvedPagePath:"/Users/delta/DMTS/src/app/api/setting/raiseQuery/route.tsx",nextConfigOutput:"",userland:a}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:l,headerHooks:g,staticGenerationBailout:m}=p,y="/api/setting/raiseQuery/route"}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[6126,8107,9061],()=>__webpack_exec__(69064));module.exports=t})();