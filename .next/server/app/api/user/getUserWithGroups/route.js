"use strict";(()=>{var e={};e.id=8945,e.ids=[8945],e.modules={11185:e=>{e.exports=require("mongoose")},524:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},32703:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>l,originalPathname:()=>_,requestAsyncStorage:()=>d,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>c,staticGenerationBailout:()=>m});var s={};t.r(s),t.d(s,{GET:()=>GET});var a=t(10884),o=t(16132),u=t(61610),i=t(95798),n=t(39949);async function GET(e){try{let e=await n.Z.find().select("_id assignedGroups OperatorName");return i.Z.json({message:e})}catch(e){return i.Z.json({error:e.message})}}(0,u.$)();let p=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/user/getUserWithGroups/route",pathname:"/api/user/getUserWithGroups",filename:"route",bundlePath:"app/api/user/getUserWithGroups/route"},resolvedPagePath:"/Users/delta/DMTS/src/app/api/user/getUserWithGroups/route.tsx",nextConfigOutput:"",userland:s}),{requestAsyncStorage:d,staticGenerationAsyncStorage:c,serverHooks:g,headerHooks:l,staticGenerationBailout:m}=p,_="/api/user/getUserWithGroups/route"}};var r=require("../../../../webpack-runtime.js");r.C(e);var __webpack_exec__=e=>r(r.s=e),t=r.X(0,[6126,8107,9060],()=>__webpack_exec__(32703));module.exports=t})();